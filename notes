Django is a Python framework that makes it easier to create web sites using Python.

Django follows the MVT design pattern (Model View Template).

Model - The data you want to present, usually data from a database.
        In Django, the data is delivered as an Object Relational Mapping (ORM), which is a technique designed to make it easier to work with databases.
        The models are usually located in a file called models.py.

View - A request handler that returns the relevant template and content - based on the request from the user.
       A view is a function or method that takes http requests as arguments, imports the relevant model(s), and finds out what data to send to the template, and returns the final result.
       The views are usually located in a file called views.py.
       Django views are Python functions that takes http requests and returns http response, like HTML documents.

Template - A text file (like an HTML file) containing the layout of the web page, with logic on how to display the data.
        Templates are often .html files, with HTML code describing the layout of a web page, but it can also be in other file formats to present other results, but we will concentrate on .html files.
        The templates of an application is located in a folder named templates.

URLs - Django also provides a way to navigate around the different pages in a website.
        When a user requests a URL, Django decides which view it will send it to.
        This is done in a file called urls.py.


pip install Django
django-admin --version
django-admin startproject my_tennis_club
python manage.py startapp members
After adding the above code, go to the settings.py file which is in the project directory, and change the value of ROOT_URLCONF from ‘project.urls’ to ‘app.urls’
Create a file named urls.py in the same folder as the views.py file, and type this code in it:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
    from django.urls import path
    from . import views
    urlpatterns = [
        path('members/', views.members, name='members'),
    ]
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
my_tennis_club/my_tennis_club/urls.py:
+++++++++++++++++++++++++++++++++++++++++++++++++++++++
    from django.contrib import admin
    from django.urls import include, path
    urlpatterns = [
        path('', include('members.urls')),
        path('admin/', admin.site.urls),
    ]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++

my_tennis_club/members/models.py:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++
from django.db import models
class Member(models.Model):
  firstname = models.CharField(max_length=255)
  lastname = models.CharField(max_length=255)

this is also called:
CREATE TABLE "members_member" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "firstname" varchar(255) NOT NULL, "lastname" varchar(255) NOT NULL); COMMIT;
++++++++++++++++++++++++++++++++++++++++++++++++++++++++
python manage.py makemigrations members
python manage.py migrate
++++++++++++++++++++++++++++++++++++++++++++++++++++++++

##########COMMANDS#############
python manage.py shell

INSERT:
from members.models import Member
member = Member(firstname='Emil', lastname='Refsnes')
member.save()
Member.objects.all()

MULTIPLE INSERT:

>>> member1 = Member(firstname='Tobias', lastname='Refsnes')
>>> member2 = Member(firstname='Linus', lastname='Refsnes')
>>> member3 = Member(firstname='Lene', lastname='Refsnes')
>>> member4 = Member(firstname='Stale', lastname='Refsnes')
>>> member5 = Member(firstname='Jane', lastname='Doe')
>>> members_list = [member1, member2, member3, member4, member5]
+++++++++++++++++++++++++++
>>> for x in members_list:
>>>   x.save()
+++++++++++++++++++++++++===
           OR
++++++++++++++++++++++++++=
Member.objects.bulk_create(members_list)
+++++++++++++++++++++++++++++++

UPDATE
>>> from members.models import Member
>>> x = Member.objects.all()[4]
>>> x.firstname
>>> x.firstname = "Stalikken"
>>> x.save()

++++++++++++++++++++++++++++++++++

DELETE
>>> from members.models import Member
>>> x = Member.objects.all()[5]
>>> x.delete()

+++++++++++++++++++++++++++++++++++===

UPDATE MODEL

ADD
phone = models.IntegerField()
joined_date = models.DateField()
python manage.py makemigrations members
python manage.py migrate

python manage.py shell
>>> from members.models import Member
>>> x = Member.objects.all()[0]
>>> x.phone = 5551234
>>> x.joined_date = '2022-01-05'
>>> x.save()
>>> Member.objects.all().values()

<QuerySet [
{'id': 1, 'firstname': 'Emil', 'lastname': 'Refsnes', 'phone': 5551234, 'joined_date': datetime.date(2022, 1, 5)},
{'id': 2, 'firstname': 'Tobias', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},
{'id': 3, 'firstname': 'Linus', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},
{'id': 4, 'firstname': 'Lene', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None},
{'id': 5, 'firstname': 'Stalikken', 'lastname': 'Refsnes', 'phone': None, 'joined_date': None}]>

++++++++++++++++++++++++++++++++++

DISPLAY DATA IN TEMPLATES

all_members.html

<!DOCTYPE html>
<html>
<body>
<h1>Members</h1>
<ul>
  {% for x in mymembers %}
    <li>{{ x.firstname }} {{ x.lastname }}</li>
  {% endfor %}
</ul>
</body>
</html>

views.py
from django.http import HttpResponse
from django.template import loader
from .models import Member

def members(request):
  mymembers = Member.objects.all().values()
  template = loader.get_template('all_members.html')
  context = {
    'mymembers': mymembers,
  }
  return HttpResponse(template.render(context, request))
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ADD LINK TO REDIRECT TO ANOTHER URL

***************  mymember = Member.objects.get(id=id)  *****************************
def details(request, id):
  mymember = Member.objects.get(id=id)
  template = loader.get_template('details.html')
  context = {
    'mymember': mymember,
  }
  return HttpResponse(template.render(context, request))

Gets the id as an argument.
Uses the id to locate the correct record in the Member table.

URLS.PY
path('members/details/<int:id>', views.details, name='details')

ALL_MEMBERS.HTML
<li><a href="details/{{ x.id }}">{{ x.firstname }} {{ x.lastname }}</a></li>

******************************************************************************************************

ADD STATIC FILES
my_tennis_club/members/static/myfirst.css:

HTML
{% load static %}
<link rel="stylesheet" href="{% static 'myfirst.css' %}">

